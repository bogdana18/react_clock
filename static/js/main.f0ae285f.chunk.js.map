{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerID","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","isClockVisible","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CACZL,KAAM,IAAIC,OAGZK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAdP,gCAiBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,uBAA4BE,EAAUC,KAAtC,eAAiDP,KAAKQ,MAAMD,SApBlE,kCAwBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA1BzB,oBA8BE,WACE,OACE,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKQ,MAAMD,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGV,KAAKJ,MAAMC,KAAKQ,8BAxC3B,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJtB,MAAe,CACbuB,gBAAgB,EAChBZ,KAAMK,K,4CAGR,WAAU,IAAD,OACCO,EAAmBnB,KAAKJ,MAAxBuB,eAER,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAECS,GAAkB,cAAC,EAAD,CAAOZ,KAAMP,KAAKJ,MAAMW,OAE3C,wBACEa,KAAK,SACLV,UAAU,mBACVW,QAAS,kBAAM,EAAKnB,SAAS,CAAEiB,gBAAgB,KAC/CG,SAAUtB,KAAKJ,MAAMuB,eAJvB,wBASA,wBACEC,KAAK,SACLV,UAAU,mBACVW,QAAS,kBAAM,EAAKnB,SAAS,CAAEiB,gBAAgB,KAC/CG,UAAWtB,KAAKJ,MAAMuB,eAJxB,+B,GAxBUR,aAqCHO,ICjDfK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0ae285f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name:string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerID?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps:Props) {\n    if (prevProps.name !== this.props.name) {\n    // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerID) {\n      clearInterval(this.timerID);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  isClockVisible: boolean;\n  name: string;\n};\n\nclass App extends Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    name: getRandomName(),\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        {isClockVisible && <Clock name={this.state.name} />}\n\n        <button\n          type=\"button\"\n          className=\"App__button show\"\n          onClick={() => this.setState({ isClockVisible: true })}\n          disabled={this.state.isClockVisible}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button hide\"\n          onClick={() => this.setState({ isClockVisible: false })}\n          disabled={!this.state.isClockVisible}\n        >\n          Hide Clock\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}